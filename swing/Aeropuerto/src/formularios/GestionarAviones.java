package formularios;

import clases.Aeropuerto;
import clases.Avion;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import utilidades.MetodosSueltos;
import utilidades.VariablesGlobales;

/**
 *
 * @author Fernando Cuatro
 */
public class GestionarAviones extends javax.swing.JDialog {

 /**
  * Creates new form ActivarDesactivarAviones
  *
  * @param parent
  * @param modal
  * @param modo = true es para desactivar y desactivar y false eliminar
  */
 private boolean modo;

 public GestionarAviones(java.awt.Frame parent, boolean modal, boolean modo) {
  super(parent, modal);
  initComponents();

  // Centramos el JDialog
  this.setLocationRelativeTo(null);

  this.modo = modo;

  // Agregamos los radiobutton a su grupo
  this.buttonGroup1.add(this.rdbActivado);
  this.buttonGroup1.add(this.rdbDesactivado);

  // Llenamos los aeropuertos
  MetodosSueltos.cargarAeropuertos(cmbAeropuerto);

  if (!modo)
  {
   this.rdbActivado.setVisible(false);
   this.rdbDesactivado.setVisible(false);

   this.btnGuardar.setText("Eliminar");
  }
 }

 /**
  * This method is called from within the constructor to initialize the form.
  * WARNING: Do NOT modify this code. The content of this method is always
  * regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
 private void initComponents() {

  buttonGroup1 = new javax.swing.ButtonGroup();
  jLabel1 = new javax.swing.JLabel();
  jLabel2 = new javax.swing.JLabel();
  cmbAeropuerto = new javax.swing.JComboBox<>();
  cmbAvion = new javax.swing.JComboBox<>();
  jLabel3 = new javax.swing.JLabel();
  rdbActivado = new javax.swing.JRadioButton();
  rdbDesactivado = new javax.swing.JRadioButton();
  btnGuardar = new javax.swing.JButton();
  btnCancelar = new javax.swing.JButton();
  jLabel4 = new javax.swing.JLabel();

  setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

  jLabel1.setText("Aeropuerto:");

  jLabel2.setText("Avión: ");

  cmbAeropuerto.addItemListener(new java.awt.event.ItemListener() {
   public void itemStateChanged(java.awt.event.ItemEvent evt) {
    cmbAeropuertoItemStateChanged(evt);
   }
  });

  cmbAvion.addItemListener(new java.awt.event.ItemListener() {
   public void itemStateChanged(java.awt.event.ItemEvent evt) {
    cmbAvionItemStateChanged(evt);
   }
  });

  jLabel3.setText("Estado:");

  buttonGroup1.add(rdbActivado);
  rdbActivado.setText("Activado");

  buttonGroup1.add(rdbDesactivado);
  rdbDesactivado.setText("Desactivado");

  btnGuardar.setText("Guardar");
  btnGuardar.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    btnGuardarActionPerformed(evt);
   }
  });

  btnCancelar.setText("Cancelar");
  btnCancelar.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    btnCancelarActionPerformed(evt);
   }
  });

  jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
  jLabel4.setText("Activar o desactivar un avión");

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addGap(43, 43, 43)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addGroup(layout.createSequentialGroup()
      .addComponent(jLabel1)
      .addGap(26, 26, 26)
      .addComponent(cmbAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
     .addGroup(layout.createSequentialGroup()
      .addComponent(jLabel3)
      .addGap(51, 51, 51)
      .addComponent(rdbActivado)
      .addGap(41, 41, 41)
      .addComponent(rdbDesactivado))
     .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
      .addGroup(layout.createSequentialGroup()
       .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
       .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
       .addComponent(btnCancelar))
      .addGroup(layout.createSequentialGroup()
       .addComponent(jLabel2)
       .addGap(56, 56, 56)
       .addComponent(cmbAvion, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
    .addContainerGap(28, Short.MAX_VALUE))
  );
  layout.setVerticalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addGap(20, 20, 20)
    .addComponent(jLabel4)
    .addGap(18, 18, 18)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addGroup(layout.createSequentialGroup()
      .addGap(5, 5, 5)
      .addComponent(jLabel1))
     .addComponent(cmbAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addGap(37, 37, 37)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addGroup(layout.createSequentialGroup()
      .addGap(5, 5, 5)
      .addComponent(jLabel2))
     .addComponent(cmbAvion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addGap(35, 35, 35)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addGroup(layout.createSequentialGroup()
      .addGap(6, 6, 6)
      .addComponent(jLabel3))
     .addComponent(rdbActivado)
     .addComponent(rdbDesactivado))
    .addGap(27, 27, 27)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(btnGuardar)
     .addComponent(btnCancelar))
    .addContainerGap(27, Short.MAX_VALUE))
  );

  pack();
 }// </editor-fold>//GEN-END:initComponents

 private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
  this.dispose();
 }//GEN-LAST:event_btnCancelarActionPerformed

 private void cmbAeropuertoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAeropuertoItemStateChanged
  // Cuando se seleccione el aeropuerto evaluamos los aviones
  // Recuperamos el aueropuerto seleccionado
  Aeropuerto auxAero = VariablesGlobales.aeropuertos.get(this.cmbAeropuerto.getSelectedIndex());

  // Si tiene avones, cagamos los aviones
  // Limpiamos lo que tenga ese comboBox
  this.cmbAvion.removeAllItems();

  if (auxAero.tieneAvione())
  {
   // Obtenemos los aviones
   for (Avion a : auxAero.getAviones())
   {
    this.cmbAvion.addItem(a.getModelo());
   }

   btnGuardar.setEnabled(true);
  } else
  {
   btnGuardar.setEnabled(false);
  }

 }//GEN-LAST:event_cmbAeropuertoItemStateChanged

 private void cmbAvionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAvionItemStateChanged
  // Recuperamos la informacion del aeropuerto
  Aeropuerto auxAero = VariablesGlobales.aeropuertos.get(this.cmbAeropuerto.getSelectedIndex());

  if (auxAero.tieneAvione() && this.cmbAvion.getItemCount() != 0)
  {
   // Recuperamos ese avion en concreto
   Avion a = auxAero.getAvion(this.cmbAvion.getSelectedItem().toString());

   if (a.isActivado())
   {
    this.rdbActivado.setSelected(true);
   } else
   {
    this.rdbDesactivado.setSelected(true);
   }
  }

 }//GEN-LAST:event_cmbAvionItemStateChanged

 private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

  if (!this.modo)
  {
   // Recuperamos la informacion del aeropuerto
   Aeropuerto auxAero = VariablesGlobales.aeropuertos.get(this.cmbAeropuerto.getSelectedIndex());

   // Recuperamos ese avion en concreto
   Avion a = auxAero.getAvion(this.cmbAvion.getSelectedItem().toString());

   auxAero.eliminarAvion(a);

   try
   {
    // Que actualice el fichero
    MetodosSueltos.actualizarFichero();

    // Llenamos los aeropuertos
    // MetodosSueltos.cargarAeropuertos(cmbAeropuerto);
    this.cmbAvion.removeAllItems();

    // Obtenemos los aviones
    for (Avion aux : auxAero.getAviones())
    {
     this.cmbAvion.addItem(aux.getModelo());
    }
    
    JOptionPane.showMessageDialog(rootPane, "Se elimino el avion " + a.getModelo(), "Exito", JOptionPane.INFORMATION_MESSAGE);
   } catch (IOException ex)
   {
    Logger.getLogger(GestionarAviones.class.getName()).log(Level.SEVERE, null, ex);
   }

  } else
  {
   // Recuperamos la informacion del aeropuerto
   Aeropuerto auxAero = VariablesGlobales.aeropuertos.get(this.cmbAeropuerto.getSelectedIndex());

   if (auxAero.tieneAvione())
   {
    // Recuperamos ese avion en concreto
    Avion a = auxAero.getAvion(this.cmbAvion.getSelectedItem().toString());

    if (this.rdbActivado.isSelected())
    {
     a.setActivado(true);

     JOptionPane.showMessageDialog(rootPane, "Se activo el avion " + a.getModelo() + " correctamente", "Exito", JOptionPane.INFORMATION_MESSAGE);
    } else if (this.rdbDesactivado.isSelected())
    {
     a.setActivado(false);

     JOptionPane.showMessageDialog(rootPane, "Se desabilito el avion " + a.getModelo() + " correctamente", "Exito", JOptionPane.INFORMATION_MESSAGE);
    }
   }

  }

  this.dispose();
 }//GEN-LAST:event_btnGuardarActionPerformed

 /**
  * @param args the command line arguments
  */
 public static void main(String args[]) {
  /* Set the Nimbus look and feel */
  //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
  /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
   */
  try
  {
   for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
   {
    if ("Nimbus".equals(info.getName()))
    {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
    }
   }
  } catch (ClassNotFoundException ex)
  {
   java.util.logging.Logger.getLogger(GestionarAviones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (InstantiationException ex)
  {
   java.util.logging.Logger.getLogger(GestionarAviones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (IllegalAccessException ex)
  {
   java.util.logging.Logger.getLogger(GestionarAviones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (javax.swing.UnsupportedLookAndFeelException ex)
  {
   java.util.logging.Logger.getLogger(GestionarAviones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  }
  //</editor-fold>
  //</editor-fold>

  /* Create and display the dialog */
  java.awt.EventQueue.invokeLater(new Runnable() {
   public void run() {
    GestionarAviones dialog = new GestionarAviones(new javax.swing.JFrame(), true, true);

    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
     @Override
     public void windowClosing(java.awt.event.WindowEvent e) {
      System.exit(0);
     }
    });
    dialog.setVisible(true);
   }
  });
 }

 // Variables declaration - do not modify//GEN-BEGIN:variables
 private javax.swing.JButton btnCancelar;
 private javax.swing.JButton btnGuardar;
 private javax.swing.ButtonGroup buttonGroup1;
 private javax.swing.JComboBox<String> cmbAeropuerto;
 private javax.swing.JComboBox<String> cmbAvion;
 private javax.swing.JLabel jLabel1;
 private javax.swing.JLabel jLabel2;
 private javax.swing.JLabel jLabel3;
 private javax.swing.JLabel jLabel4;
 private javax.swing.JRadioButton rdbActivado;
 private javax.swing.JRadioButton rdbDesactivado;
 // End of variables declaration//GEN-END:variables
}
